var chatmate={config:{},init:{},models:{},controllers:{},views:{},services:{},utils:{}};
chatmate.controllers.ChatRoomController=function(){return function($chatRoomModel$$){var $that$$={},$chatRoomMessagesView$$=null;$that$$.renderChatRoom=function $$that$$$renderChatRoom$(){return chatmate.views.ChatRoomView($that$$).render()};$that$$.renderChatRoomMessages=function $$that$$$renderChatRoomMessages$(){$chatRoomMessagesView$$=chatmate.views.ChatRoomMessagesView($that$$);return $chatRoomMessagesView$$.render()};$that$$.deleteChatRoomCallback=function $$that$$$deleteChatRoomCallback$(){$chatRoomModel$$.deleteRoom();
chatmate.controllers.PageController.openChatRoomsView()};$that$$.saveChatRoomCallback=function $$that$$$saveChatRoomCallback$(){chatmate.models.ChatRoomModelFactory.addChatRoomModel($chatRoomModel$$);chatmate.controllers.PageController.openChatRoomsView()};$that$$.sendMessage=function $$that$$$sendMessage$($message$$){chatmate.services.ChatService.sendMessage($chatRoomModel$$,$message$$);$that$$.addMessage($message$$)};$that$$.addMessage=function $$that$$$addMessage$($message$$){null!==$chatRoomMessagesView$$&&
$chatRoomMessagesView$$.addMessage($message$$)};$that$$.getChatRoomModel=function $$that$$$getChatRoomModel$(){return $chatRoomModel$$};chatmate.services.ChatService.setOnMessageCallback(function($packet$$){$packet$$.room===$chatRoomModel$$.getTitle()&&$that$$.addMessage($packet$$.message)});return $that$$}}();
chatmate.controllers.ChatRoomsController=function(){return function(){var $that$$={},$chatRoomsMenuView$$=null,$openChatRoomCallback$$=function $$openChatRoomCallback$$$($title$$){return function(){chatmate.controllers.PageController.openChatRoomPage({title:$title$$})}};$that$$.addChatRoom=function $$that$$$addChatRoom$($chatRoomTitle$$){console.log($chatRoomsMenuView$$);null!==$chatRoomsMenuView$$&&$chatRoomsMenuView$$.addItem($chatRoomTitle$$,$openChatRoomCallback$$($chatRoomTitle$$))};$that$$.renderChatRoomList=
function $$that$$$renderChatRoomList$(){var $chatRooms_container$$=chatmate.models.ChatRoomModelFactory.getAllActiveChatRooms(),$chatRoomList$$=[],$title$$;for($title$$ in $chatRooms_container$$)$chatRooms_container$$.hasOwnProperty($title$$)&&$chatRoomList$$.push({label:$title$$,callback:$openChatRoomCallback$$($title$$)});$chatRoomsMenuView$$=chatmate.views.ListView("Chat Rooms Menu",$chatRoomList$$,"No Chat Rooms Available");$chatRooms_container$$=document.createElement("div");$chatRooms_container$$.appendChild($chatRoomsMenuView$$.render());
$chatRooms_container$$.appendChild(mwf.decorator.SingleClickButton("Create Room",chatmate.controllers.PageController.openNewChatRoomPage));return $chatRooms_container$$};chatmate.services.ChatService.setOnMessageCallback(function($packet$$){chatmate.models.ChatRoomModelFactory.chatRoomExists($packet$$.room)||$that$$.addChatRoom($packet$$.room)});return $that$$}}();
chatmate.controllers.PageController=function(){var $that$$={},$pageHistoryStack$$=[],$pageCanvas$$=null,$displayPage$$=function $$displayPage$$$($pageModel_pageView$$){console.log("PageController: Displaying page "+$pageModel_pageView$$.getPageTitle());var $pageModel_pageView$$=chatmate.models.PageView($pageModel_pageView$$),$canvas$$;null===$pageCanvas$$&&($pageCanvas$$=document.getElementById("page-canvas"));$canvas$$=$pageCanvas$$;$canvas$$.innerHTML="";$canvas$$.appendChild($pageModel_pageView$$.render())};
$that$$.register=function $$that$$$register$($pageName$$,$initializer$$){$that$$["open"+$pageName$$]=$initializer$$};$that$$.render=function $$that$$$render$($pageModel$$){console.log("PageController: Adding page model "+$pageModel$$.getPageTitle()+" to history stack.");$pageHistoryStack$$.push($pageModel$$);$displayPage$$($pageModel$$)};$that$$.canGoBack=function $$that$$$canGoBack$(){return 1<$pageHistoryStack$$.length};$that$$.goBack=function $$that$$$goBack$(){$pageHistoryStack$$.pop();console.log("PageController: goBack() invoked.");
$displayPage$$($pageHistoryStack$$[$pageHistoryStack$$.length-1])};return $that$$}();
chatmate.init.ChatRoomMessages=function(){return function($chatRoomController_chatRoomModel$$){var $page$$=chatmate.models.PageModel("Chat Room Messages"),$chatRoomController_chatRoomModel$$=chatmate.models.ChatRoomModelFactory.getChatRoomModel($chatRoomController_chatRoomModel$$.title),$chatRoomController_chatRoomModel$$=chatmate.controllers.ChatRoomController($chatRoomController_chatRoomModel$$);$page$$.setTopButton("Chat Rooms",chatmate.controllers.PageController.openChatRoomsView);$page$$.setPageContent($chatRoomController_chatRoomModel$$.renderChatRoomMessages());
chatmate.controllers.PageController.render($page$$)}}();chatmate.init.ChatRooms=function(){return function(){var $chatRoomsController$$=chatmate.controllers.ChatRoomsController(),$page$$=chatmate.models.PageModel("Chat Rooms");$page$$.setTopButton("Refresh",chatmate.controllers.PageController.openChatRoomsView);$page$$.setPageContent($chatRoomsController$$.renderChatRoomList());chatmate.controllers.PageController.render($page$$)}}();
chatmate.init.NewChatRoom=function(){return function(){var $chatRoomController$$=chatmate.models.ChatRoomModel(""),$chatRoomController$$=chatmate.controllers.ChatRoomController($chatRoomController$$),$page$$=chatmate.models.PageModel("Create New Chat Room");$page$$.setTopButton("Chat Rooms",chatmate.controllers.PageController.openChatRoomsView);$page$$.setPageContent($chatRoomController$$.renderChatRoom());chatmate.controllers.PageController.render($page$$)}}();
$(document).ready(function(){chatmate.controllers.PageController.register("HomePage",chatmate.init.ChatRooms);chatmate.controllers.PageController.register("NewChatRoomPage",chatmate.init.NewChatRoom);chatmate.controllers.PageController.register("ChatRoomsView",chatmate.init.ChatRooms);chatmate.controllers.PageController.register("ChatRoomPage",chatmate.init.ChatRoomMessages);chatmate.controllers.PageController.register("NewChatRoomPage",chatmate.init.NewChatRoom);chatmate.models.ChatRoomModelFactory.getChatRoomModel("OPT Tech Talk");
chatmate.models.ChatRoomModelFactory.getChatRoomModel("MWF Friends");chatmate.controllers.PageController.openChatRoomsView();if(chatmate.utils.DeviceDetection.isDeviceAndroid()){var $androidBackButtonCallback$$=function $$androidBackButtonCallback$$$(){chatmate.controllers.PageController.canGoBack()?(console.log("Go back!"),chatmate.controllers.PageController.goBack()):navigator.app.exitApp()};document.addEventListener("deviceready",function(){document.addEventListener("backbutton",$androidBackButtonCallback$$,
!0)},!1)}else chatmate.services.ChatService.run()});
chatmate.models.ChatRoomModel=function(){return function($title$$){var $that$$={},$messages$$=[],$deleted$$=!1;$that$$.getTitle=function $$that$$$getTitle$(){return $title$$};$that$$.setTitle=function $$that$$$setTitle$($newTitle$$){$title$$=$newTitle$$};$that$$.addMessage=function $$that$$$addMessage$($message$$){$messages$$.push($message$$)};$that$$.getMessages=function $$that$$$getMessages$(){return $messages$$};$that$$.isDeleted=function $$that$$$isDeleted$(){return $deleted$$};$that$$.deleteRoom=
function $$that$$$deleteRoom$(){$deleted$$=!0};return $that$$}}();
chatmate.models.ChatRoomModelFactory=function(){var $that$$={},$chatRoomModels$$={};$that$$.addChatRoomModel=function $$that$$$addChatRoomModel$($chatRoomModel$$){$chatRoomModels$$[$chatRoomModel$$.getTitle()]=$chatRoomModel$$};$that$$.chatRoomExists=function $$that$$$chatRoomExists$($title$$){return void 0!==$chatRoomModels$$[$title$$]};$that$$.getChatRoomModel=function $$that$$$getChatRoomModel$($title$$){$that$$.chatRoomExists($title$$)||$that$$.addChatRoomModel(chatmate.models.ChatRoomModel($title$$));
return $chatRoomModels$$[$title$$]};$that$$.getAllActiveChatRooms=function $$that$$$getAllActiveChatRooms$(){var $activeChatRooms$$={},$title$$;for($title$$ in $chatRoomModels$$)$chatRoomModels$$.hasOwnProperty($title$$)&&($chatRoomModels$$[$title$$].isDeleted()||($activeChatRooms$$[$title$$]=$chatRoomModels$$[$title$$]));return $activeChatRooms$$};return $that$$}();
chatmate.models.PageModel=function(){return function($pageTitle$$,$pageParams$$){var $that$$={},$pageContent$$,$topButtonCallback$$,$topButtonLabel$$;$that$$.setPageContent=function $$that$$$setPageContent$($newPageContent$$){$pageContent$$=$newPageContent$$};$that$$.getContent=function $$that$$$getContent$(){return $pageContent$$};$that$$.setPageTitle=function $$that$$$setPageTitle$($newPageTitle$$){$pageTitle$$=$newPageTitle$$};$that$$.getPageTitle=function $$that$$$getPageTitle$(){return $pageTitle$$};
$that$$.setPageParams=function $$that$$$setPageParams$($newPageParams$$){$pageParams$$=$newPageParams$$};$that$$.getPageParams=function $$that$$$getPageParams$(){return $pageParams$$};$that$$.setTopButton=function $$that$$$setTopButton$($newTopButtonLabel$$,$newTopButtonCallback$$){$topButtonLabel$$=$newTopButtonLabel$$;$topButtonCallback$$=$newTopButtonCallback$$};$that$$.getTopButtonLabel=function $$that$$$getTopButtonLabel$(){return $topButtonLabel$$};$that$$.getTopButtonCallback=function $$that$$$getTopButtonCallback$(){return $topButtonCallback$$};
return $that$$}}();
chatmate.services.ChatService=function(){var $that$$={},$logger$$=chatmate.utils.Logger("chatmate.services.ChatService"),$messageQueue$$=[],$socket$$=null,$onMessageCallback$$,$isSocketOpen$$=!1,$onOpenHandler$$=function $$onOpenHandler$$$(){console.log("ChatService: Opened connection.");$socket$$.binaryType="arraybuffer";$isSocketOpen$$=!0},$onMessageHandler$$=function $$onMessageHandler$$$($e$$){var $packet$$=$.parseJSON($e$$.data);console.log("ChatService: Received message: "+$e$$.data);chatmate.models.ChatRoomModelFactory.getChatRoomModel($packet$$.room).addMessage($packet$$.message);
"function"===typeof $onMessageCallback$$&&$onMessageCallback$$($packet$$)},$onCloseHandler$$=function $$onCloseHandler$$$(){$isSocketOpen$$=!1};$that$$.setOnMessageCallback=function $$that$$$setOnMessageCallback$($newOnMessageCallback$$){$onMessageCallback$$=$newOnMessageCallback$$};$that$$.run=function $$that$$$run$(){null===$socket$$&&($logger$$.info("Starting WebSocket."),$socket$$=new WebSocket("ws://localhost:3000"));$socket$$.onerror=function $$socket$$$onerror$($e$$){$logger$$.error("Error occurred with the socket.");
$logger$$.error($e$$)};$socket$$.onmessage=$onMessageHandler$$;$socket$$.onopen=$onOpenHandler$$;$socket$$.onclose=$onCloseHandler$$};$that$$.sendMessage=function $$that$$$sendMessage$($chatRoomModel$$,$message$$){$chatRoomModel$$.addMessage($message$$);var $packet$$={room:$chatRoomModel$$.getTitle(),message:$message$$};$isSocketOpen$$?($logger$$.info("Sent message: ",$packet$$),$socket$$.send(JSON.stringify($packet$$))):$messageQueue$$.push($message$$)};return $that$$}();
chatmate.utils.CacheService=function(){var $cache$$={};return function($namespace$$){var $that$$={isSet:function($key$$){return void 0!==$cache$$[$namespace$$][$key$$]},set:function($key$$,$value$$){$cache$$[$namespace$$][$key$$]=$value$$},remove:function($key$$){$that$$.isSet($key$$)&&delete $cache$$[$namespace$$][$key$$]},removeAll:function(){$cache$$[$namespace$$]={}}};void 0===$namespace$$&&($namespace$$="global");void 0===$cache$$[$namespace$$]&&($cache$$[$namespace$$]={});return $that$$}}();
chatmate.utils.DeviceDetection=function(){var $that$$={},$userAgent$$=navigator.userAgent,$documentURL$$=document.URL;$that$$.isOnDevice=function $$that$$$isOnDevice$(){return $userAgent$$.match(/(iPhone|iPod|iPad|Android|BlackBerry)/)};$that$$.isDeviceiOS=function $$that$$$isDeviceiOS$(){return $userAgent$$.match(/(iPhone|iPod|iPad)/)};$that$$.isDeviceAndroid=function $$that$$$isDeviceAndroid$(){return $userAgent$$.match(/(Android)/)};$that$$.isNativeApplication=function $$that$$$isNativeApplication$(){return-1===
$documentURL$$.indexOf("http://")&&-1===$documentURL$$.indexOf("https://")};$that$$.setUserAgent=function $$that$$$setUserAgent$($newUserAgent$$){$userAgent$$=$newUserAgent$$};$that$$.setDocumentURL=function $$that$$$setDocumentURL$($newDocumentURL$$){$documentURL$$=$newDocumentURL$$};return $that$$}();
chatmate.utils.LocalMap=function $chatmate$utils$LocalMap$($name$$0$$){var $that$$={};void 0===localStorage[$name$$0$$]&&(localStorage[$name$$0$$]=JSON.stringify({}));$that$$.getMap=function $$that$$$getMap$(){return JSON.parse(localStorage[$name$$0$$])};$that$$.set=function $$that$$$set$($name$$,$object$$){var $map$$=$that$$.getMap();$map$$[$name$$]=$object$$;localStorage[$name$$0$$]=JSON.stringify($map$$)};$that$$.importMap=function $$that$$$importMap$($object$$){var $map$$=$that$$.getMap(),$key$$;
for($key$$ in $object$$)$object$$.hasOwnProperty($key$$)&&($map$$[$key$$]=$object$$[$key$$]);localStorage[$name$$0$$]=JSON.stringify($map$$)};$that$$.get=function $$that$$$get$($name$$){var $map$$=$that$$.getMap();return void 0!==$map$$[$name$$]?$map$$[$name$$]:null};$that$$.length=function $$that$$$length$(){var $map$$=$that$$.getMap(),$size$$=0,$key$$;for($key$$ in $map$$)$map$$.hasOwnProperty($key$$)&&($size$$+=1);return $size$$};$that$$.erase=function $$that$$$erase$(){localStorage[$name$$0$$]=
JSON.stringify({})};$that$$.isSet=function $$that$$$isSet$($name$$){return null!==$that$$.get($name$$)};$that$$.release=function $$that$$$release$($name$$){var $map$$=$that$$.getMap();$map$$[$name$$]&&delete $map$$[$name$$];localStorage[$name$$0$$]=JSON.stringify($map$$)};return $that$$};chatmate.utils.LocalMap.destroy=function $chatmate$utils$LocalMap$destroy$(){for(var $item$$ in localStorage)localStorage.hasOwnProperty($item$$)&&delete localStorage[$item$$]};
chatmate.utils.LocalMap.exists=function $chatmate$utils$LocalMap$exists$($name$$){return localStorage[$name$$]?!0:!1};
chatmate.utils.Logger=function(){var $warn$$=function $$warn$$$($namespace$$){console.warn($namespace$$+": ",arguments)},$error$$=function $$error$$$($namespace$$){console.error($namespace$$+": ",arguments)},$info$$=function $$info$$$($namespace$$){console.log(typeof arguments);console.log(arguments);console.log.apply(console,arguments);console.info($namespace$$+": ",arguments)};return function($namespace$$){return{log:function(){console.log($namespace$$+": ")},debug:function(){console.debug($namespace$$+
": ")},warn:function(){$warn$$($namespace$$,arguments)},error:function(){$error$$($namespace$$,arguments)},info:function(){$info$$(arguments)}}}}();
chatmate.utils.TouchEnabledItemModel=function(){var $that$$={bindClickEvents:function($item$$,$highlightItem$$,$onClickCallback$$,$onMouseoverHighlightClass$$){"function"===typeof $onClickCallback$$&&$($item$$).mouseover(function(){$($highlightItem$$).addClass($onMouseoverHighlightClass$$)}).mouseout(function(){$($highlightItem$$).removeClass($onMouseoverHighlightClass$$)}).click($onClickCallback$$)},bindTouchEvents:function($item$$0$$,$highlightItem$$,$onTouchCallback$$,$onTouchHighlightClass$$){$that$$.bindClickEvents($item$$0$$,
function($e$$){$e$$.preventDefault();return!1});var $moveCounter$$;$($item$$0$$).bind("touchstart",function(){$moveCounter$$=0;$($highlightItem$$).addClass($onTouchHighlightClass$$)});$($item$$0$$).bind("touchmove",function($e$$16_x$$){if($($highlightItem$$).is("."+$onTouchHighlightClass$$)){$moveCounter$$+=1;var $item$$=$e$$16_x$$.srcElement,$touch_y$$=$e$$16_x$$.originalEvent.touches[0]||$e$$16_x$$.originalEvent.changedTouches[0],$elm$$=$($item$$).offset(),$e$$16_x$$=$touch_y$$.pageX-$elm$$.left,
$touch_y$$=$touch_y$$.pageY-$elm$$.top;(15<$moveCounter$$||!($e$$16_x$$<$($item$$).width()&&0<$e$$16_x$$)||!($touch_y$$<$($item$$).height()&&0<$touch_y$$))&&$($highlightItem$$).removeClass($onTouchHighlightClass$$)}});$($item$$0$$).bind("touchend",function($e$$){$e$$.preventDefault();15>=$moveCounter$$&&$($highlightItem$$).is("."+$onTouchHighlightClass$$)&&($($highlightItem$$).removeClass($onTouchHighlightClass$$),"function"===typeof $onTouchCallback$$&&$onTouchCallback$$($e$$))})},bindTouchEvent:function($item$$,
$highlightItem$$,$onTouchCallback$$,$highlightClass$$){$highlightItem$$=$highlightItem$$||$item$$;$highlightClass$$=$highlightClass$$||"pressed";chatmate.utils.DeviceDetection.isOnDevice()?$that$$.bindTouchEvents($item$$,$highlightItem$$,$onTouchCallback$$,$highlightClass$$):$that$$.bindClickEvents($item$$,$highlightItem$$,$onTouchCallback$$,$highlightClass$$)}};return $that$$}();
chatmate.utils.UUIDGen={generate:function $chatmate$utils$UUIDGen$generate$(){var $s$$=[],$i$$;for($i$$=0;36>$i$$;$i$$+=1)$s$$[$i$$]="0123456789abcdef".substr(Math.floor(16*Math.random()),1);$s$$[14]="4";$s$$[19]="0123456789abcdef".substr($s$$[19]&3|8,1);$s$$[8]=$s$$[13]=$s$$[18]=$s$$[23]="-";return $s$$.join("")}};
chatmate.views.ChatRoomMessagesView=function(){return function($chatRoomController$$){var $that$$={},$chatRoomModel$$=$chatRoomController$$.getChatRoomModel(),$messagesMenu$$,$noMessagesAvailable$$=!1;$that$$.render=function $$that$$$render$(){$messagesMenu$$=mwf.decorator.Menu($chatRoomModel$$.getTitle());var $container$$1_messages$$=$chatRoomModel$$.getMessages(),$i$$;if(0===$container$$1_messages$$.length)$messagesMenu$$.addMenuLinkItem("No Messages Available"),$noMessagesAvailable$$=!0;else for($i$$=
0;$i$$<$container$$1_messages$$.length;$i$$+=1){var $message$$=$container$$1_messages$$[$i$$];$messagesMenu$$.addMenuLinkItem($message$$.username,null,$message$$.text)}$container$$1_messages$$=document.createElement("div");$container$$1_messages$$.appendChild($messagesMenu$$);$container$$1_messages$$.appendChild(chatmate.views.NewChatRoomMessageView($chatRoomController$$).render());$container$$1_messages$$.appendChild(mwf.decorator.SingleClickButton("Delete Room",$chatRoomController$$.deleteChatRoomCallback));
return $container$$1_messages$$};$that$$.addMessage=function $$that$$$addMessage$($message$$){$noMessagesAvailable$$&&($messagesMenu$$.removeMenuItemAt(0),$noMessagesAvailable$$=!1);$messagesMenu$$.addMenuLinkItem($message$$.username,null,$message$$.text)};return $that$$}}();
chatmate.views.ChatRoomView=function(){return function($chatRoomController$$){var $that$$={},$chatRoomModel$$=$chatRoomController$$.getChatRoomModel(),$saveChatRoomCallback$$=function $$saveChatRoomCallback$$$(){var $newTitle$$=document.getElementById("chat-room-title-input").value;0===$newTitle$$.length?alert("Sorry, no invalid titles."):chatmate.models.ChatRoomModelFactory.chatRoomExists($newTitle$$)?alert("Sorry, no duplicate chat room title."):($chatRoomModel$$.setTitle($newTitle$$),$chatRoomController$$.saveChatRoomCallback())};
$that$$.render=function $$that$$$render$(){var $chatRoomFormView$$=mwf.decorator.Form("Chat Room Information");$chatRoomFormView$$.addLabel("Title","chat-room-title-input");$chatRoomFormView$$.addTextBox("chat-room-title-input","chat-room-title-input").value=$chatRoomModel$$.getTitle();$($chatRoomFormView$$).submit(function($e$$){$e$$.preventDefault();$saveChatRoomCallback$$()});var $container$$=document.createElement("div");$container$$.appendChild($chatRoomFormView$$);$container$$.appendChild(mwf.decorator.DoubleClickButton("Cancel",
chatmate.controllers.PageController.openChatRoomsView,"Save",$saveChatRoomCallback$$));return $container$$};return $that$$}}();
chatmate.views.ListView=function(){return function($title$$,$list$$,$emptyListMessage$$){var $that$$={},$menu$$=null,$isEmptyList$$=!1;$that$$.addItem=function $$that$$$addItem$($label$$,$callback$$){if(null!==$menu$$){$isEmptyList$$&&($menu$$.removeMenuItemAt(0),$isEmptyList$$=!1);var $menuItem$$=$menu$$.addMenuLinkItem($label$$);void 0===$callback$$&&chatmate.utils.TouchEnabledItemModel.bindTouchEvent($menuItem$$,$menuItem$$,$callback$$,"menu-highlight")}};$that$$.render=function $$that$$$render$(){$menu$$=
mwf.decorator.Menu($title$$);if(0===$list$$.length)$menu$$.addMenuLinkItem($emptyListMessage$$),$isEmptyList$$=!0;else{var $i$$;for($i$$=0;$i$$<$list$$.length;$i$$+=1)$that$$.addItem($list$$[$i$$].label,$list$$[$i$$].callback)}return $menu$$};return $that$$}}();
chatmate.views.NewChatRoomMessageView=function(){return function($chatRoomController$$){var $that$$={},$user$$=chatmate.utils.LocalMap("user");$that$$.render=function $$that$$$render$(){var $form$$=mwf.decorator.Form("New Message");$form$$.addLabel("Username","username");$form$$.addTextBox("username","username",$user$$.get("username"));$form$$.addLabel("Your Message");$form$$.addTextBox("New Message","new-message");$form$$.addSubmitButton("Send Away");$($form$$).submit(function($e$$19_username$$){$e$$19_username$$.preventDefault();
var $e$$19_username$$=document.getElementById("username").value,$message$$=document.getElementById("new-message").value;0===$e$$19_username$$.length?alert("Please enter your username."):0===$message$$.length?alert("Sorry, no empty messages can be sent."):($chatRoomController$$.sendMessage({text:$message$$,username:$e$$19_username$$}),$user$$.set("username",$e$$19_username$$),document.getElementById("new-message").value="",document.activeElement.blur(),$("input").blur())});return $form$$};return $that$$}}();
chatmate.models.PageView=function(){return function($pageModel$$){return{render:function(){document.getElementById("header-title").innerHTML=$pageModel$$.getPageTitle();mwf.decorator.TopButton($pageModel$$.getTopButtonLabel(),null,$pageModel$$.getTopButtonCallback(),!0);var $headerLink$$=document.getElementById("header-link");chatmate.utils.TouchEnabledItemModel.bindTouchEvent($headerLink$$,$headerLink$$,chatmate.controllers.PageController.openHomePage);return $pageModel$$.getContent()}}}}();